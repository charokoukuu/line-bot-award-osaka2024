openapi: 3.0.0
info:
  title: BoTreasure API
  version: 1.0.0
servers:
  - url: 'https://api.example.com/v1'
paths:
  /users/{userId}:
    get:
      summary: Get a user by user ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      summary: Create a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /teams:
    get:
      summary: Get a team
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team created
  /teams/{teamId}:
    get:
      summary: Get a team by team ID
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      summary: Update a team by team ID
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Team updated
    delete:
      summary: Delete a team by team ID
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Team deleted
  /schedules:
    get:
      summary: List all schedules
      responses:
        '200':
          description: A list of schedules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    Player:
      type: object
      properties:
        teamId:
          type: string
        role:
          $ref: '#/components/schemas/Role'
        gameType:
          $ref: '#/components/schemas/Game'
        user:
          $ref: '#/components/schemas/User'
    TeamInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        playerCount:
          type: integer
        ownerCount:
          type: integer
        keyword:
          type: string
    Team:
      type: object
      properties:
        id:
          type: string
        info:
          $ref: '#/components/schemas/TeamInfo'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Schedule:
      type: object
      properties:
        id:
          type: string
        date:
          type: string
          format: date-time
    Status:
      type: string
      enum:
        - none
        - host
        - guest
        - owner
        - seeker
    Role:
      type: string
      enum:
        - host
        - guest
    Game:
      type: string
      enum:
        - none
        - owner
        - seeker
